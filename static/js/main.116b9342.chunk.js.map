{"version":3,"sources":["context.js","toDO/ToDoItem.js","toDO/ToDoList.js","toDO/TodoAdd.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ToDoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","className","join","type","id","checked","title","onClick","bind","styles","ul","listStyle","ToDoList","props","style","todos","map","onToggle","AddTodo","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","target","App","setTodos","useEffect","localStorage","getItem","JSON","parse","window","addEventListener","setItem","stringify","Provider","filter","concat","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAIeA,EAFDC,IAAMC,gB,OCmCLC,MAjCf,YAA4C,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrBC,EAAcC,qBAAWR,GAAzBO,WACDE,EAAU,GAIhB,OAHIL,EAAKM,WACLD,EAAQE,KAAK,QAIb,qBAAIC,UAAU,OAAd,UACU,uBAAMA,UAAWH,EAAQI,KAAK,KAA9B,UACF,uBAAOD,UAAU,YACbE,KAAK,WACLR,SAAU,kBAAMA,EAASF,EAAKW,KAC9BC,QAASZ,EAAKM,YAGXL,EAAQ,EAPb,KAOkBD,EAAKa,SAE7B,wBACIC,QAASX,EAAWY,KAAK,KAAMf,EAAKW,IACpCH,UAAU,aAFd,sBClBNQ,EAAS,CACXC,GAAI,CACAC,UAAW,SAsBJC,MAlBf,SAAkBC,GACd,OACI,oBAAIC,MAAOL,EAAOC,GAAlB,SACQG,EAAME,MAAMC,KAAI,SAACvB,EAAMC,GACnB,OAAQ,cAAC,EAAD,CAAUD,KAAMA,EAENC,MAAOA,EACPC,SAAUkB,EAAMI,UAFXxB,EAAKW,UCkBjCc,MA7Bf,YAA8B,IAAZC,EAAW,EAAXA,SACd,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OACI,uBAAMC,SATV,SAAuBC,GACnBA,EAAMC,iBACFJ,EAAMK,SACNP,EAASE,GACTC,EAAS,MAKkBrB,UAAU,WAAzC,UACI,uBACIA,UAAU,YACVE,KAAK,OACLkB,MAAOA,EACP1B,SAAU,SAAA6B,GAAK,OAAIF,EAASE,EAAMG,OAAON,UAC7C,wBAAQlB,KAAK,SAASF,UAAU,MAAhC,qBCsCG2B,MAvDf,WAEI,MAAwBtC,IAAM8B,SAC1B,CAAC,CAAChB,GAAI,EAAGL,WAAW,EAAOO,MAAO,yFAC9B,CAACF,GAAI,EAAGL,WAAW,EAAOO,MAAO,yFACjC,CAACF,GAAI,EAAGL,WAAW,EAAOO,MAAO,+EAHzC,mBAAKS,EAAL,KAAYc,EAAZ,KAsCA,OAjCAC,qBAAU,WACgC,OAAlCC,aAAaC,QAAQ,UACrBH,EAASI,KAAKC,MAAMH,aAAaC,QAAQ,aAC9C,IAEHF,qBAAU,WACNK,OAAOC,iBAAiB,UAAU,WAC9BL,aAAaM,QAAQ,QAASJ,KAAKK,UAAUvB,UA2BjD,cAAC,EAAQwB,SAAT,CAAkBlB,MAAO,CAACzB,WAb9B,SAAoBQ,GAChByB,EAASd,EAAMyB,QAAO,SAAA/C,GAAI,OAAIA,EAAKW,KAAOA,QAY1C,SACI,sBAAKH,UAAU,MAAf,UACI,oBAAIA,UAAU,cAAd,4IACA,cAAC,EAAD,CAASkB,SAZrB,SAAiBb,GACbuB,EAASd,EAAM0B,OAAO,CAAC,CACnBnC,QACAF,GAAIsC,KAAKC,MACT5C,WAAW,SAUP,cAAC,EAAD,CACIgB,MAAOA,EACPE,SA9BhB,SAAoBb,GAChByB,EACId,EAAMC,KAAI,SAAAvB,GAIN,OAHIA,EAAKW,KAAOA,IACZX,EAAKM,WAAaN,EAAKM,WAEpBN,eCjBRmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.116b9342.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context=React.createContext()\r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from \"../context\";\r\n\r\nfunction ToDoItem({todo, index, onChange}) {\r\n    const {removeTodo} = useContext(Context)\r\n    const classes = []\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n    return (\r\n\r\n        <li className='todo'>\r\n                  <span className={classes.join(' ')}>\r\n                <input className='check_box'\r\n                    type='checkbox'\r\n                    onChange={() => onChange(todo.id)}\r\n                    checked={todo.completed}\r\n                   />\r\n\r\n                      {index + 1}. {todo.title}\r\n                </span>\r\n            <button\r\n                onClick={removeTodo.bind(null, todo.id)}\r\n                className='remove_btn'>&times;\r\n            </button>\r\n        </li>\r\n\r\n    )\r\n}\r\n\r\nToDoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func\r\n}\r\n\r\nexport default ToDoItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none'\r\n    }\r\n}\r\n\r\nfunction ToDoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n               {props.todos.map((todo, index) => {\r\n                    return (<ToDoItem todo={todo}\r\n                                      key={todo.id}\r\n                                      index={index}\r\n                                      onChange={props.onToggle}/>)\r\n                }\r\n            )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nToDoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\nexport default ToDoList","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction AddTodo({onCreate}) {\r\n    const [value, setValue] = useState('')\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault()\r\n        if (value.trim()) {\r\n            onCreate(value)\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className='add_form'>\r\n            <input\r\n                className='add_input'\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={event => setValue(event.target.value)}/>\r\n            <button type='submit' className='btn'>Add\r\n            </button>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    onCreate: PropTypes.func.isRequired\r\n}\r\nexport default AddTodo\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport ToDoList from \"./toDO/ToDoList\";\r\nimport Context from \"./context\";\r\nimport AddTodo from \"./toDO/TodoAdd\";\r\n\r\nfunction App() {\r\n\r\n    let [todos, setTodos] = React.useState(\r\n        [{id: 1, completed: false, title: 'Воспитать детей'},\r\n            {id: 2, completed: false, title: 'Посадить дерево'},\r\n            {id: 3, completed: false, title: 'Построить дом'}])\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('todos') !== null) {\r\n            setTodos(JSON.parse(localStorage.getItem('todos')))  }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"unload\", function() {\r\n            localStorage.setItem('todos', JSON.stringify(todos))\r\n        });\r\n    })\r\n    \r\n    function toggleTodo(id) {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            }))\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        setTodos(todos.filter(todo => todo.id !== id))\r\n    }\r\n\r\n    function addTodo(title) {\r\n        setTodos(todos.concat([{\r\n            title,\r\n            id: Date.now(),\r\n            completed: false\r\n        }]))\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{removeTodo}}>\r\n            <div className=\"App\">\r\n                <h1 className='main__title'>Чем бы заняться сегодня?..</h1>\r\n                <AddTodo onCreate={addTodo}>\r\n                </AddTodo>\r\n                <ToDoList\r\n                    todos={todos}\r\n                    onToggle={toggleTodo}>\r\n                </ToDoList>\r\n            </div>\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}